
spring.profiles.active=default

# Example of directly setting frequently used properties:
# (takes precedence over Java API properties)
# "host" parameter format: [Protocol:]Host[:Port]
solace.java.host=tcp://localhost:55555
solace.java.msgVpn=testVPN
solace.java.clientUsername=default
solace.java.clientPassword=password
server.port=8081
solace.java.connectRetries=1
solace.java.reconnectRetries=3	
solace.java.connectRetriesPerHost=1
solace.java.reconnectRetryWaitInMillis=1000

solace.cli.username=admin
solace.cli.password=admin

#logging.level.org.springframework=DEBUG

#logging.file.name=E:/ANZ/solacelogs/siteactivator.log
logging.file.name=.\siteactivator.log

redundancy.status.start=<redundancy-status>
redundancy.status.closing=</redundancy-status>

# Application to check if Solace is running in normal mode or maintenance mode 
application.mode=normal
application.semp.url=http://localhost:8080/SEMP
semp.redundancy.status.call.payload=<rpc semp-version=\"soltr/9_5VMR\"><show><redundancy><detail></detail></redundancy></show></rpc>
semp.replication.role.active.json.payload={\"replicationRole\":\"active\"}
semp.replication.role.standby.json.payload={\"replicationRole\":\"standby\"}
semp.replication.role.url=http://localhost:8080/SEMP/v2/config/msgVpns/testVPN2
semp.msgvpn.enable.json.payload={\"enabled\":true}

solace.healthcheck.url.node1=http://localhost:5550/health-check/guaranteed-active
solace.healthcheck.url.node2=http://localhost:5550/health-check/guaranteed-active


# Example use of any other Solace Java API properties:
# The name of the property can be obtained from
# https://docs.solace.com/API-Developer-Online-Ref-Documentation/java/constant-values.html 
#solace.java.apiProperties.reapply_subscriptions=false
